apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
    release: {{ .Release.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    heritage: {{ .Release.Service }}
    dls4e_release: {{ required "DLS4E Release name is required" .Values.global.dls4e }}
    dls4e_release_version: {{ required "DLS4E Release version is required" .Values.global.dls4e_release }}
    apiserver: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      release: {{ .Release.Name }}
      chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
      heritage: {{ .Release.Service }}
      apiserver: "true"
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        release: {{ .Release.Name }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        heritage: {{ .Release.Service }}
        apiserver: "true"
    spec:
{{- if eq (required "DLS4E Storage Type" .Values.global.dls4e_storage.type) "pvc" }}
{{- else }}
      nodeSelector:
{{ toYaml (required "DLS4E Storage Node Label Selector" .Values.global.dls4e_storage.local_selector) | indent 8 }}
{{- end }}
      serviceAccount: {{ .Release.Name }}-{{ .Chart.Name }}
      containers:
        - name: apiserver
          image: {{ required "DLS4E Registry is required" .Values.global.dls4e_registry }}/{{ required "DLS4E service image is required" .Values.service_image }}
          imagePullPolicy: Always
          command:
          - "./apiserver"
          args:
          - "--etcd-servers=http://{{ .Release.Name }}-{{ .Chart.Name }}-etcd:2379"
          - "--loglevel=1"
          - "--audit-log-path=-"
          - "--audit-log-maxage=0"
          - "--audit-log-maxbackup=0"
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
          - name: apiserver-certs-temp
            mountPath: /apiserver.local.config/certificates
        - name: controller
          image: {{ required "DLS4E Registry is required" .Values.global.dls4e_registry }}/{{ required "DLS4E service image is required" .Values.service_image }}
          imagePullPolicy: Always
          command:
          - "./controller-manager"
          args:
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
      volumes:
{{ if eq (required "DLS4E Storage Type" .Values.global.dls4e_storage.type) "pvc" }}
        - name: apiserver-certs-temp
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-{{ .Chart.Name }}
{{ else }}
        - name: apiserver-certs-temp
          hostPath:
            path: {{ required "DLS4E Storage Path" .Values.global.dls4e_storage.local_path }}/{{ .Release.Name }}/{{ .Chart.Name }}/main
            type: DirectoryOrCreate
{{ end }}
