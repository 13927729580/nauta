apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
    release: {{ .Release.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    heritage: {{ .Release.Service }}
    dls4e_release: {{ required "DLS4E Release name is required" .Values.global.dls4e }}
    dls4e_release_version: {{ required "DLS4E Release version is required" .Values.global.dls4e_release }}
    dls4e_app_name: elasticsearch
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      release: {{ .Release.Name }}
      chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
      heritage: {{ .Release.Service }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        release: {{ .Release.Name }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        heritage: {{ .Release.Service }}
        dls4e_app_name: elasticsearch
    spec:
{{- if eq (required "DLS4E Storage Type" .Values.global.dls4e_storage.type) "pvc" }}
{{- else }}
      nodeSelector:
{{ toYaml (required "DLS4E Storage Node Label Selector" .Values.global.dls4e_storage.local_selector) | indent 8 }}
{{- end }}
      initContainers:
      - command:
        - sysctl
        - -w
        - vm.max_map_count=262144
        image: {{ required "DLS4E Registry is required" .Values.global.dls4e_registry }}/{{ required "DLS4E elasticsearch init image is required" .Values.init_image }}
        imagePullPolicy: IfNotPresent
        name: init-sysctl
        resources: {}
        securityContext:
          privileged: true
      containers:
      - name: {{ .Chart.Name }}
        image: {{ required "DLS4E Registry is required" .Values.global.dls4e_registry }}/{{ required "DLS4E elasticsearch image is required" .Values.image }}
        imagePullPolicy: "IfNotPresent"
        env:
        - name: ES_JAVA_OPTS
          value: "-Xmx1G -Xms1G -XX:+UnlockDiagnosticVMOptions -XX:+PrintCompressedOopsMode -XX:HeapDumpPath=/data"
        - name: PROCESSORS
          value: "2"
        - name: NODE_MASTER
          value: "true"
        - name: NODE_DATA
          value: "true"
        - name: NETWORK_HOST
          value: "_local_,_site_"
        resources:
          requests:
            memory: 2Gi
            cpu: 2
          limits:
            memory: 3Gi
            cpu: 4
        ports:
        - containerPort: 9200
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /_cluster/health?wait_for_status=yellow&wait_for_no_initializing_shards&timeout=60s
            port: 9200
          initialDelaySeconds: 20
          timeoutSeconds: 60
        volumeMounts:
        - name: data
          mountPath: /data
      volumes:
{{ if eq (required "DLS4E Storage Type" .Values.global.dls4e_storage.type) "pvc" }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-{{ .Chart.Name }}
{{ else }}
        - name: data
          hostPath:
            path: {{ required "DLS4E Storage Path" .Values.global.dls4e_storage.local_path }}/{{ .Release.Name }}/{{ .Chart.Name }}/main
            type: DirectoryOrCreate
{{ end }}
