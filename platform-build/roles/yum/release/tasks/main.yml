---

- name: Copy all deployer files to directory
  synchronize:
    src: "{{ playbook_dir }}/../platform-deploy/"
    dest: "{{ tmp_dir }}/"

- name: Ensure that files directory exist
  file:
    path: "{{ tmp_dir }}/files"
    state: directory

- name: Ensure that config directory exist
  file:
    path: "{{ tmp_dir }}/group_vars/all"
    state: directory

- name: List all rpms
  delegate_to: localhost
  become: False
  find:
    path: "{{ build_dir }}"
    patterns: '*.rpm'
  register: files

- name: Copy all files to remote src
  copy:
    src: "{{ item.path }}"
    dest: "{{ tmp_dir }}/files/{{ item.path | basename }}"
  with_items: "{{ files.files }}"

- name: Generate file with configuration
  vars:
    configuration:
      carbon_release_package_installation: file
      carbon_release_package_version: "{{ build_major }}.{{ build_minor }}.{{ build_no }}"
      carbon_release_package_release: "{{ build_id }}"
  copy:
    dest: "{{ tmp_dir }}/group_vars/all/repository.yml"
    content: "{{ configuration | to_nice_yaml(width=50, explicit_start=True, explicit_end=True) }}"

- name: Create package
  changed_when: False
  shell: >
    tar -zvcf /opt/project-data/repository/releases/dlse-{{ build_major }}.{{ build_minor }}.{{ build_no }}-{{ build_id }}.tar.gz ./
  args:
    chdir: "{{ tmp_dir }}"

- name: Get sha of each item
  changed_when: False
  shell: >
    sha256sum /opt/project-data/repository/releases/dlse-{{ build_major }}.{{ build_minor }}.{{ build_no }}-{{ build_id }}.tar.gz | tr -s ' ' | cut -d ' ' -f1 >
    /opt/project-data/repository/releases/dlse-{{ build_major }}.{{ build_minor }}.{{ build_no }}-{{ build_id }}.tar.gz.sha256sum
