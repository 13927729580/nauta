---

- name: Ensure release directories exists
  file:
    path: "{{ build_dir }}/{{ item }}"
    state: directory
  with_items:
    - bin

- name: Fetch all required images
  vars:
    name: "{{ item.key }}"
    data: "{{ item.value }}"
  with_dict: "{{ supported_os_versions }}"
  docker_image:
    name: "{{ data.image }}"
    state: "present"

- name: Create all images directories
  file:
    path: "{{ build_dir }}/bin/{{ data.type }}/{{ data.name }}/{{ data.version }}"
    state: directory
  vars:
    name: "{{ item.key }}"
    data: "{{ item.value }}"
  with_dict: "{{ supported_os_versions }}"

- name: Start all images
  vars:
    name: "{{ item.key }}"
    data: "{{ item.value }}"
  with_dict: "{{ supported_os_versions }}"
  docker_container:
    name: "release-builder-{{ version }}-{{ name }}-{{ data.type }}"
    image: "{{ data.image }}"
    volumes:
      - "{{ build_dir }}/bin/{{ data.type }}/{{ data.name }}/{{ data.version }}:/out"
    command: /bin/bash -c "while true; do sleep 1; done"

- name: Add hosts to inventory
  vars:
    name: "{{ item.key }}"
    data: "{{ item.value }}"
  with_dict: "{{ supported_os_versions }}"
  add_host:
    name: "release-builder-{{ version }}-{{ name }}-{{ data.type }}"
    group: "releases"
    ansible_connection: docker
    system: "{{ data.name }}"
    ansible_python_interpreter: "/usr/bin/python3.6"
