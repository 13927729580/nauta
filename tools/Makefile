GLOBAL_WORKSPACE:=$(CURDIR)/.workspace
GLOBAL_VIRTUALENV_DIR:=$(CURDIR)/.venv

DIRECTORY:=$(CURDIR)
WORKSPACE_NAME:=tools
include $(CURDIR)/makelibs/commons.mk

PLATFORM_CONFIG:=$(CURDIR)/platform-config.yml
DLS4E_CONFIG:=$(CURDIR)/dls4e-config.yml

PUSH_MAKE:=(cd $(CURDIR)/push && make build)
RPMS_MAKE:=(cd $(CURDIR)/rpms-build && make build)
CONTAINER_MAKE:=(cd $(CURDIR)/container-build && make build)
FINALIZERS_PLATFORM_MAKE:=(cd $(CURDIR)/finalizers/platform && make build)
FINALIZERS_DLS4E_MAKE:=(cd $(CURDIR)/finalizers/dls4e && make build)
FINALIZERS_RELEASE_MAKE:=(cd $(CURDIR)/finalizers/release && make build)

DOCKER_PACKAGE:=$(BUILD_DIR)/docker.tar.gz
PLATFORM_PACKAGE:=$(BUILD_DIR)/platform.tar.gz
DLS4E_PACKAGE:=$(BUILD_DIR)/dls4e.tar.gz
PLATFORM_RELEASE_PACKAGE:=$(BUILD_DIR)/platform-release.tar.gz
DLS4E_RELEASE_PACKAGE:=$(BUILD_DIR)/dls4e-release.tar.gz
RELEASE_PACKAGE:=$(WORKSPACE)/dls4e-$(VERSION).tar.gz
REMOTE_RELEASE_PACKAGE:=releases/dls4e/dls4e-$(VERSION).tar.gz


PLATFORM_DEPLOYER:=$(CURDIR)/deployers/platform
DLS4E_DEPLOYER:=$(CURDIR)/deployers/dls4e

# Global exports
export VERSION_MAJOR := $(DEFAULT_VERSION_MAJOR)
export VERSION_MINOR := $(DEFAULT_VERSION_MINOR)
export VERSION_NO := $(DEFAULT_VERSION_NO)
export VERSION_ID := $(DEFAULT_VERSION_ID)
export GLOBAL_WORKSPACE := $(GLOBAL_WORKSPACE)
export GLOBAL_VIRTUALENV_DIR := $(GLOBAL_VIRTUALENV_DIR)

$(DOCKER_PACKAGE): export ENV_OUTPUT := $(DOCKER_PACKAGE)
$(DOCKER_PACKAGE): $(BUILD_DIR)
	@$(CONTAINER_MAKE)

$(PLATFORM_PACKAGE): $(DOCKER_PACKAGE)
$(PLATFORM_PACKAGE): export INCLUDED_FILES := $(DOCKER_PACKAGE)
$(PLATFORM_PACKAGE): export ENV_OUTPUT := $(PLATFORM_PACKAGE)
$(PLATFORM_PACKAGE): $(BUILD_DIR)
	@$(RPMS_MAKE)
	@rm $(DOCKER_PACKAGE)

$(DLS4E_PACKAGE): export ENV_OUTPUT := $(DLS4E_PACKAGE)
$(DLS4E_PACKAGE): $(BUILD_DIR)
	@$(CONTAINER_MAKE)

$(PLATFORM_RELEASE_PACKAGE): export ENV_BUILD_CONFIG := $(PLATFORM_CONFIG)
$(PLATFORM_RELEASE_PACKAGE): export NAME := platform
$(PLATFORM_RELEASE_PACKAGE): $(PLATFORM_PACKAGE)
$(PLATFORM_RELEASE_PACKAGE): export ENV_PLATFORM_PACKAGE := $(PLATFORM_PACKAGE)
$(PLATFORM_RELEASE_PACKAGE): export ENV_OUTPUT := $(PLATFORM_RELEASE_PACKAGE)
$(PLATFORM_RELEASE_PACKAGE): export ENV_DEPLOYER := $(PLATFORM_DEPLOYER)
$(PLATFORM_RELEASE_PACKAGE): $(BUILD_DIR)
	@$(FINALIZERS_PLATFORM_MAKE)
	@rm $(PLATFORM_PACKAGE)

$(DLS4E_RELEASE_PACKAGE): export ENV_BUILD_CONFIG := $(DLS4E_CONFIG)
$(DLS4E_RELEASE_PACKAGE): export NAME := dls4e
$(DLS4E_RELEASE_PACKAGE): $(DLS4E_PACKAGE)
$(DLS4E_RELEASE_PACKAGE): export ENV_PLATFORM_PACKAGE := $(DLS4E_PACKAGE)
$(DLS4E_RELEASE_PACKAGE): export ENV_OUTPUT := $(DLS4E_RELEASE_PACKAGE)
$(DLS4E_RELEASE_PACKAGE): export ENV_DEPLOYER := $(DLS4E_DEPLOYER)
$(DLS4E_RELEASE_PACKAGE): $(BUILD_DIR)
	@$(FINALIZERS_DLS4E_MAKE)
	@rm $(DLS4E_PACKAGE)

$(RELEASE_PACKAGE): $(DLS4E_RELEASE_PACKAGE) $(PLATFORM_RELEASE_PACKAGE)
$(RELEASE_PACKAGE): export ENV_PLATFORM_PACKAGE := $(PLATFORM_RELEASE_PACKAGE)
$(RELEASE_PACKAGE): export ENV_DLS4E_PACKAGE := $(DLS4E_RELEASE_PACKAGE)
$(RELEASE_PACKAGE): export ENV_OUTPUT := $(RELEASE_PACKAGE)
$(RELEASE_PACKAGE): $(BUILD_DIR)
	@$(FINALIZERS_RELEASE_MAKE)
	@rm $(DLS4E_RELEASE_PACKAGE) $(PLATFORM_RELEASE_PACKAGE)

.PHONY: platform dls4e all push

platform: $(PLATFORM_RELEASE_PACKAGE)

dls4e: $(DLS4E_RELEASE_PACKAGE)

all: $(RELEASE_PACKAGE)

release: ENV_S3_URL ENV_ACCESS_KEY ENV_SECRET_KEY
release: export ENV_S3_URL := $(ENV_S3_URL)
release: export ENV_ACCESS_KEY := $(ENV_ACCESS_KEY)
release: export ENV_SECRET_KEY := $(ENV_SECRET_KEY)
release: $(RELEASE_PACKAGE)
release: export ENV_SRC := $(RELEASE_PACKAGE)
release: export ENV_DEST := $(REMOTE_RELEASE_PACKAGE)
release:
	@$(PUSH_MAKE)
