---

- name: Check if image exists
  environment: "{{ local_envs }}"
  shell: "{{ runtime_helm }} status dls4enterprise-registry-{{ dls4e_version.replace('.', '-') }}"
  register: chart
  changed_when: chart.rc == 1
  failed_when: chart.rc not in [0, 1]
  delegate_to: "{{ delegation_hostname }}"

- name: Ensure that dls4e registry chart exists
  file:
    path: "{{ runtime_registry_chart }}"
  delegate_to: "{{ delegation_hostname }}"

- name: Install helm chart
  environment: "{{ local_envs }}"
  shell: "{{ runtime_helm }} install -n dls4enterprise-registry-{{ dls4e_version.replace('.', '-') }} --namespace dls4e  {{ runtime_registry_chart }} --wait"
  when: chart is changed
  delegate_to: "{{ delegation_hostname }}"

- name: Fetch kubectl nodeport
  environment: "{{ local_envs }}"
  shell: "{{ runtime_kubectl }} -n dls4e get svc dls4enterprise-registry-{{ dls4e_version.replace('.', '-') }} -o 'jsonpath={.spec.ports[?(@.targetPort=='5000')].nodePort}'"
  register: nodeport
  delegate_to: "{{ delegation_hostname }}"

- set_fact:
    registry_nodeport: "{{ nodeport.stdout | int }}"
