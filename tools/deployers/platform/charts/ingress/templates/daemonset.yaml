apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Release.Name }}-ingress
  labels:
    app: {{ .Release.Name }}-ingress
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-ingress
      chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
      release: {{ .Release.Name }}
      heritage: {{ .Release.Service }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-ingress
        chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
      annotations:
        prometheus.io/port: '10254'
        prometheus.io/scrape: 'true'
    spec:
      nodeSelector:
        master: "True"
      serviceAccountName: {{ .Release.Name }}-ingress
      containers:
        - name: nginx-ingress-controller
          image: {{ required "Ingress IMAGE is required" .Values.IngressImage }}
          resources:
            requests:
              cpu: 500m
              memory: 256m
          args:
            - /nginx-ingress-controller
            - --default-backend-service=$(POD_NAMESPACE)/{{ .Release.Name }}-ingress-defaultbackend
            - --configmap=$(POD_NAMESPACE)/{{ .Release.Name }}-ingress-nginx
            - --tcp-services-configmap=$(POD_NAMESPACE)/{{ .Release.Name }}-ingress-tcp
            - --udp-services-configmap=$(POD_NAMESPACE)/{{ .Release.Name }}-ingress-udp
            - --annotations-prefix=nginx.ingress.kubernetes.io
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
          - name: http
            containerPort: 80
          - name: https
            containerPort: 443
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
