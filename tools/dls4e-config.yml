---

export_images:
  - name: tiller
    value: "{{ image_local_url['dls4e/tiller'] }}"
  - name: tensorboard_service
    value: "{{ image_local_url['dls4e/tensorboard-service'] }}"
# tensorflow part
  - name: tensorflow
    value: "{{ image_local_url['dls4e/tensorflow/1.12.0py3/base'] }}"
  - name: horovod
    value: "{{ image_local_url['dls4e/horovod/py3'] }}"
  - name: horovod_py2
    value: "{{ image_local_url['dls4e/horovod/py2'] }}"
  - name: tensorflow_1.12
    value: "{{ image_local_url['dls4e/tensorflow/1.12.0py3/base'] }}"
  - name: tensorflow_1.12_py3
    value: "{{ image_local_url['dls4e/tensorflow/1.12.0py3/base'] }}"
  - name: tensorflow_1.12_py2
    value: "{{ image_local_url['dls4e/tensorflow/1.12.0py2/base'] }}"
  - name: activity-proxy
    value: "{{ image_local_url['dls4e/activity-proxy'] }}"
  - name: batch-inference
    value: "{{ image_local_url['dls4e/batch-inference'] }}"
  - name: tf-serving-sidecar
    value: "{{ image_local_url['dls4e/tf-serving-sidecar'] }}"
  - name: ps-sidecar
    value: "{{ image_local_url['dls4e/ps-sidecar'] }}"

local_images:
  dls4e/centos:
    version: "7.5.1804"
    method: pull
    image: "centos:7.5.1804"
    push: True
  dls4e/kubectl:
    version: "1.10.11"
    required: {}
    method: build
    directory: "{{ playbook_dir }}/../../dls4e-containers/kubectl"
  dls4e/gui:
    version: "1.0.0"
    required: {}
    method: build
    directory: "{{ playbook_dir }}/../../applications/dls-gui"
  dls4e/elasticsearch:
    version: "v6.4.0"
    image: "quay.io/pires/docker-elasticsearch-kubernetes:6.4.0"
    method: pull
  dls4e/fluentd:
    version: "v1.3.0"
    image: "fluent/fluentd-kubernetes-daemonset:v1.3-debian-elasticsearch"
    method: pull
  dls4e/registry:
    version: "2.6.2"
    image: "registry:2"
    method: pull
  dls4e/samba:
    version: "1.0.0"
    required:
      BASE_IMAGE: "shared/centos/python36"
    method: build
    directory: "{{ playbook_dir }}/../../dls4e-containers/samba"
  dls4e/elasticsearch/curator:
    version: "v5.5.4"
    image: "quay.io/pires/docker-elasticsearch-curator:5.5.4"
    method: pull
  dls4e/etcd:
    version: "3.3.10"
    image: "gcr.io/google-containers/etcd-amd64:3.3.10"
    method: pull
  dls4e/tiller:
    version: "v2.11.0"
    image: "gcr.io/kubernetes-helm/tiller:v2.11.0"
    method: pull
  dls4e/redsocks:
    version: "1.0.0"
    required: {}
    method: build
    directory: "{{ playbook_dir }}/../../dls4e-containers/redsocks"
  dls4e/experiment-service:
    version: "1.0.0"
    required:
      BASE_IMAGE: "shared/centos"
      BUILD_IMAGE: "shared/centos/go-apiserver-builder"
    method: build
    directory: "{{ playbook_dir }}/../../applications/experiment-service"
  dls4e/tensorflow/1.12.0py2/base:
    version: "1.12.0-py2"
    required:
      BASE_IMAGE: "shared/run/tensorflow/py2.7"
      METRICS_IMAGE: "shared/build/metrics"
    method: build
    directory: "{{ playbook_dir }}/../../dls4e-containers/tensorflow/py27"
  dls4e/tensorflow/1.12.0py3/base:
    version: "1.12.0-py3"
    required:
      BASE_IMAGE: "shared/run/tensorflow/py3.6"
      METRICS_IMAGE: "shared/build/metrics"
    method: build
    directory: "{{ playbook_dir }}/../../dls4e-containers/tensorflow/py36"
  dls4e/tensorflow:
    version: "1.12.0-py3"
    required:
      BASE_IMAGE: "shared/run/tensorflow/py3.6"
      METRICS_IMAGE: "shared/build/metrics"
    method: build
    directory: "{{ playbook_dir }}/../../dls4e-containers/tensorflow/py36"
  dls4e/horovod/py3:
    version: "1.9.0-py3"
    required:
      BASE_IMAGE: "shared/run/tensorflow/py3.6"
      METRICS_IMAGE: "shared/build/metrics"
    method: build
    directory: "{{ playbook_dir }}/../../dls4e-containers/horovod/3.6"
  dls4e/horovod/py2:
    version: "1.9.0-py2"
    required:
      BASE_IMAGE: "shared/run/tensorflow/py2.7"
      METRICS_IMAGE: "shared/build/metrics"
    method: build
    directory: "{{ playbook_dir }}/../../dls4e-containers/horovod/2.7"
  dls4e/nginx:
    version: "1.13.9"
    method: pull
    image: "nginx:1.13.9"
  dls4e/docs:
    version: "v0.0.1"
    required: {}
    method: build
    directory: "{{ playbook_dir }}/../../docs/user-guide-html"
    dockerfile: "{{ playbook_dir }}/../../dls4e-containers/docs-nginx/Dockerfile"
  dls4e/tf/operator:
    version: "v2"
    required: {}
    method: build
    directory: "{{ playbook_dir }}/../../dls4e-containers/tf-operator"
  dls4e/docker:
    version: "18.03"
    required: {}
    method: build
    directory: "{{ playbook_dir }}/../../dls4e-containers/docker"
  dls4e/ps-sidecar:
    version: "1.0.0"
    required: {}
    method: build
    directory: "{{ playbook_dir }}/../../applications/ps-sidecar"
  dls4e/ingress:
    version: "0.14.0"
    image: "quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.14.0"
    BASE_IMAGE: "shared/centos"
    method: pull
  dls4e/defaultbackend:
    version: "1.4"
    image: "gcr.io/google-containers/defaultbackend-amd64:1.4"
    method: pull
  dls4e/dashboard:
    version: "v1.8.3"
    image: "k8s.gcr.io/kubernetes-dashboard-amd64:v1.8.3"
    method: pull
  dls4e/tensorboard-service:
    version: "v1.0.0"
    required:
      BASE_IMAGE: "shared/centos/python36"
    method: build
    directory: "{{ playbook_dir }}/../../applications/tensorboard-service"
  dls4e/activity-proxy:
    version: "v1.0.0"
    required: {}
    method: build
    directory: "{{ playbook_dir }}/../../applications/activity-proxy"
  dls4e/batch-inference:
    version: "v1.0.0"
    required:
      BASE_IMAGE: "shared/centos/python36"
      METRICS_IMAGE: "shared/build/metrics"
    method: build
    directory: "{{ playbook_dir }}/../../applications/batch-inference"
  dls4e/tf-serving-sidecar:
    version: "v1.0.0"
    required: {}
    method: build
    directory: "{{ playbook_dir }}/../../applications/tf-serving-sidecar"
  dls4e/kube-batch:
    version: "1.0.0"
    required:
      BASE_IMAGE: "shared/centos"
      BUILD_IMAGE: "shared/centos/build-go"
    method: build
    directory: "{{ playbook_dir }}/../../dls4e-containers/kube-batch"

subcharts:
  dls4e-registry:
    registry:
      version: 2.6.2
      path: "{{ playbook_dir }}/../../dls4e-registry-charts/registry"
  dls4e:
    gui:
      version: 0.0.1
      path: "{{ playbook_dir }}/../../dls4e-charts/gui"
      chart_values:
        image: "{{ image_local_url['dls4e/gui'] }}"
    admin-account:
      version: 1.0.0
      path: "{{ playbook_dir }}/../../dls4e-charts/admin-account"
    experiments:
      version: 1.0.0
      path: "{{ playbook_dir }}/../../dls4e-charts/experiments"
    configuration:
      version: 1.0.0
      path: "{{ playbook_dir }}/../../dls4e-charts/configuration"
    commons:
      version: 1.0.0
      path: "{{ playbook_dir }}/../../dls4e-charts/commons"
      chart_values:
        docker_image: "{{ image_local_url['dls4e/docker'] }}"
    docker-registry:
      version: 1.1.1
      path: "{{ playbook_dir }}/../../dls4e-charts/docker-registry"
      chart_values:
        image: "{{ image_local_url['dls4e/registry'] }}"
        gc_image: "{{ image_local_url['dls4e/kubectl'] }}"
    kube-batch:
      version: 1.0.0
      path: "{{ playbook_dir }}/../../dls4e-charts/kube-batch"
      chart_values:
        image: "{{ image_local_url['dls4e/kube-batch'] }}"
    elasticsearch:
      version: 0.0.1
      path: "{{ playbook_dir }}/../../dls4e-charts/elasticsearch"
      chart_values:
        image: "{{ image_local_url['dls4e/elasticsearch'] }}"
        init_image: "{{ image_local_url['dls4e/centos'] }}"
    elasticsearch-curator:
      version: 0.0.1
      path: "{{ playbook_dir }}/../../dls4e-charts/elasticsearch-curator"
      chart_values:
        image: "{{ image_local_url['dls4e/elasticsearch/curator'] }}"
        init_image: "{{ image_local_url['dls4e/centos'] }}"
    fluentd:
      version: 0.0.1
      path: "{{ playbook_dir }}/../../dls4e-charts/fluentd"
      chart_values:
        image: "{{ image_local_url['dls4e/fluentd'] }}"
        centos_image: "{{ image_local_url['dls4e/centos'] }}"
    samba:
      version: 1.0.0
      path: "{{ playbook_dir }}/../../dls4e-charts/samba"
      chart_values:
        image: "{{ image_local_url['dls4e/samba'] }}"
    redsocks:
      version: 1.0.0
      path: "{{ playbook_dir }}/../../dls4e-charts/redsocks"
      conditions: features.redsocks
      feature_enabled: False
      chart_values:
        image: "{{ image_local_url['dls4e/redsocks'] }}"
        Interfaces: cni0
    registry-nginx:
      version: 1.0.0
      path: "{{ playbook_dir }}/../../dls4e-charts/registry-nginx"
      chart_values:
        image: "{{ image_local_url['dls4e/nginx'] }}"
    experiment-service:
      version: 1.0.0
      path: "{{ playbook_dir }}/../../dls4e-charts/experiment-service"
      chart_values:
        service_image: "{{ image_local_url['dls4e/experiment-service'] }}"
        etcd_image: "{{ image_local_url['dls4e/etcd'] }}"
        etcd_gc_image: "{{ image_local_url['dls4e/kubectl'] }}"
    tf:
      version: 0.1.0
      path: "{{ playbook_dir }}/../../dls4e-charts/tf"
      chart_values:
        image: "{{ image_local_url['dls4e/tf/operator'] }}"
        tfimage: "{{ image_local_url['dls4e/tensorflow/1.12.0py3/base'] }}"
    ingress:
      version: 1.0.0
      path: "{{ playbook_dir }}/../../dls4e-charts/ingress"
      chart_values:
        image: "{{ image_local_url['dls4e/ingress'] }}"
        defaultbackend_image: "{{ image_local_url['dls4e/defaultbackend'] }}"
    dashboard:
      version: 0.1.0
      path: "{{ playbook_dir }}/../../dls4e-charts/dashboard"
      chart_values:
        image: "{{ image_local_url['dls4e/dashboard'] }}"
    documentation-service:
      version: 0.0.1
      path: "{{ playbook_dir }}/../../dls4e-charts/documentation-service"
      chart_values:
        image: "{{ image_local_url['dls4e/docs'] }}"
