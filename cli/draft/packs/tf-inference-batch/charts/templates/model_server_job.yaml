apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-model-server
  labels:
    app: {{ template "name" . }}
    chart: {{ template "chart_version" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    draft: {{ .Values.draft }}
    runName: {{ .Release.Name }}
    batchType: server
spec:
  template:
    metadata:
      annotations:
        buildID: {{ .Values.buildID }}
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
        chart: {{ template "chart_version" . }}
        draft: {{ .Values.draft }}
        heritage: {{ .Release.Service }}
        runName: {{ .Release.Name }}
        batchType: server
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.clusterRepository }}:{{ .Values.image.tag }}"
          env:
            - name: MODEL_NAME
              value: {{ .Values.modelName }}
            - name: MODEL_BASE_PATH
              value: "/models"
          command: ["tf_serving_dls4e"]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.containerPort }}
          volumeMounts:
            - name: input-home
              mountPath: /mnt/input/home
              readOnly: True
            - name: input-public
              mountPath: /mnt/input/root
              readOnly: True
            - name: output-home
              mountPath: /mnt/output/home
            - name: output-public
              mountPath: /mnt/output/root
            - name: output-home
              mountPath: /mnt/output/experiment
              subPath: {{ .Values.experimentName }}
            - name: models
              mountPath: "/models"
            - name: shared-data
              mountPath: /pod-data
          securityContext:
            privileged: true
          resources:
{{ toYaml .Values.resources | indent 12 }}
        - name: sidecar
          image: "127.0.0.1:{{ .Values.registry_port }}/dls4e/tf-serving-sidecar:v1.0.0"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: BATCH_WRAPPER_JOB_NAME
            value: {{ .Release.Name }}-batch-wrapper
          volumeMounts:
          - name: shared-data
            mountPath: /pod-data
      restartPolicy: OnFailure
      volumes:
        - name: input-home
          persistentVolumeClaim:
            claimName: input-home
        - name: input-public
          persistentVolumeClaim:
            claimName: input-public
        - name: output-home
          persistentVolumeClaim:
            claimName: output-home
        - name: output-public
          persistentVolumeClaim:
            claimName: output-public
        - name: models
          emptyDir: {}
        - name: shared-data
          emptyDir: {}
      initContainers:
        - name: init-inference-pod
          image: "{{ .Values.image.clusterRepository }}:{{ .Values.image.tag }}"
          command: ['cp', '-rf', "{{ .Values.modelPath }}/.", '/models']
          volumeMounts:
            - name: input-home
              mountPath: /mnt/input/home
              readOnly: True
            - name: input-public
              mountPath: /mnt/input/root
              readOnly: True
            - name: output-home
              mountPath: /mnt/output/home
            - name: output-public
              mountPath: /mnt/output/root
            - name: output-home
              mountPath: /mnt/output/experiment
              subPath: {{ .Values.experimentName }}
            - name: models
              mountPath: "/models"
  backoffLimit: 5