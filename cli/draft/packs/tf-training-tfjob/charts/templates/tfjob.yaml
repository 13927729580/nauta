apiVersion: kubeflow.org/v1alpha2
kind: TFJob
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ template "name" . }}
    chart: {{ template "chart_version" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    draft: {{ .Values.draft }}
    runName: {{ .Release.Name }}
spec:
  tfReplicaSpecs:
    Master:
      replicas: 1
      restartPolicy: OnFailure
      template:
        metadata:
          annotations:
            buildID: {{ .Values.buildID }}
          labels:
            app: {{ template "name" . }}
            draft: {{ .Values.draft }}
            release: {{ .Release.Name }}
            runName: {{ .Release.Name }}
        spec:
          containers:
            - name: tensorflow
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              command: ["python"]
              args:
              {{- range .Values.commandline.args }}
                - "{{ . }}"
              {{- end }}
              ports:
                - containerPort: {{ .Values.TensorBoardPort }}
                  name: "tensorboard"
                - containerPort: {{ .Values.TensorIPythonPort }}
                  name: "ipython"
              env:
              - name: RUN_NAME
                value: {{ .Release.Name }}
              volumeMounts:
                - name: input-home
                  mountPath: /mnt/input/home
                  readOnly: True
                - name: input-public
                  mountPath: /mnt/input/root
                  readOnly: True
                - name: output-home
                  mountPath: /mnt/output/home
                - name: output-public
                  mountPath: /mnt/output/root
                - name: output-home
                  mountPath: /mnt/output/experiment
                  subPath: {{ .Release.Name }}
              securityContext:
                privileged: true
              resources:
    {{ toYaml .Values.resources | indent 12 }}
          volumes:
            - name: input-home
              persistentVolumeClaim:
                claimName: input-home
            - name: input-public
              persistentVolumeClaim:
                claimName: input-public
            - name: output-home
              persistentVolumeClaim:
                claimName: output-home
            - name: output-public
              persistentVolumeClaim:
                claimName: output-public
          initContainers:
            - name: init-experiment-pod
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
              command: ['mkdir', '-p', '/mnt/output/home/{{ .Release.Name }}']
              volumeMounts:
                - name: output-home
                  mountPath: /mnt/output/home
      backoffLimit: 5
