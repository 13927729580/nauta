---

- name: load a variable file based on the OS type.
  include_vars: "{{ ansible_distribution }}.yml"

- name: "Config file"
  debug:
    msg: "{{ kube_config }}"

- name: "Proxy settings for k8s related operations"
  debug:
    msg: "{{ proxy_env }}"

- name: "Parse features names"
  set_fact:
    k8s_features_names: "{{ k8s_features.split(',') }}"

#- name: "Ensure, that tiller is installed and ready"
#  environment: "{{ proxy_env }}"
#  k8s_raw:
#    kubeconfig: "{{ kube_config }}"
#    state: present
#    src: "{{ playbook_dir }}/charts/{{ tiller_part }}"
#  loop_control:
#    loop_var: tiller_part
#  with_items:
#    - tiller-001.yml
#    - tiller-002.yml
#    - tiller-003.yml

- name: "Ensure, that tiller is installed"
  environment: "{{ proxy_env }}"
  shell: "KUBECONFIG={{ kube_config }} kubectl create -f {{ playbook_dir }}/charts/{{ tiller_part }}"
  loop_control:
    loop_var: tiller_part
  with_items:
    - tiller-001.yml
    - tiller-002.yml
    - tiller-003.yml
  register: tiller_app
  failed_when: tiller_app.rc not in [0, 1]

# TOREFACTOR: Find proper way to check if tiller is really online
- name: "Sleep 20 seconds after tiller installation (TO REFACTOR)"
  shell: "sleep 20"

- name: "Ensure, that tiller is ready"
  environment: "{{ proxy_env }}"
  shell: "KUBECONFIG={{ kube_config }} kubectl get pods --all-namespaces | grep tiller | grep Running"
  register: tiller_readiness
  until: tiller_readiness.rc == 0
  retries: 20
  delay: 3

- name: "Show tiller status"
  debug:
    msg: "{{ tiller_readiness }}"

- include_tasks: k8s_feature.yml
  loop_control:
    loop_var: k8s_feature
  with_items: "{{ k8s_features_names }}"
